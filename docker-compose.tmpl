version: '3.9'
services:
  backend:
    image: $IMAGE_NAME
    container_name: backend
    expose:
     - "8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - backend-network
    volumes:
      - ./.env:/app/.env
  postgres:
    env_file:
      - .env
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - backend-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    env_file:
      - .env
    image: redis:latest
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend-network
  nginx:
    image: nginx:latest
    container_name: nginx_container
    ports:
      - "443:443"
    volumes:
      - /home/ubuntu/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - /home/ubuntu/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - backend-network
networks:
 backend-network:
