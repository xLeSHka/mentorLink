version: '3.9'
services:
  backend:
    image: $IMAGE_NAME
    container_name: backend
    expose:
     - "8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - backend-network
    volumes:
      - /home/ubuntu/.env:/app/.env
  postgres:
    env_file:
      - .env
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - 5432
    networks:
      - backend-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    env_file:
      - .env
    image: redis:latest
    container_name: redis
    expose:
      - 6379
    networks:
      - backend-network
  minio:
      container_name: minio_container
      image: minio/minio:latest
      environment:
        MINIO_HOST: ${MINIO_HOST}
        MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
        MINIO_ROOT_USER: ${MINIO_ROOT_USER}
        MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
        MINIO_PORT: ${MINIO_PORT}
      volumes:
        - minio_data:/data
      expose:
        - 9000
      healthcheck:
        test: [ "CMD", "curl", "-f", "http://${MINIO_HOST}:${MINIO_PORT}/minio/health/live" ]
        interval: 5s
        timeout: 30s
        retries: 3
        start_period: 10s
      networks:
        - backend-network
  nginx:
    image: nginx:latest
    container_name: nginx_container
    ports:
      - "443:443"
    volumes:
      - /home/ubuntu/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - /home/ubuntu/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - backend-network
networks:
 backend-network:
volumes:
  postgres_data:
  minio_data:
  redis_data:

