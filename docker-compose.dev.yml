version: '3.9'
services:
  postgres:
    env_file:
      - dev.env
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - backend-network
      - test-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    env_file:
      - dev.env
    image: redis:latest
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 10s
      start_interval: 5s
    networks:
      - backend-network
      - test-network

  minio:
    restart: on-failure
    container_name: minio_container
    image: minio/minio:latest
    command: server --console-address ":9001" /data/
    environment:
      MINIO_BUCKET_NAME: imagebucket
      MINIO_ROOT_USER: cooluser
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 5s
      timeout: 30s
      retries: 3
      start_period: 10s
    networks:
      - backend-network
      - test-network
networks:
  backend-network:
  test-network:
volumes:
  redis_data:
  postgres_data:
  minio_data:

